import { useEffect, useState } from "react";
import { useGetProductsQuery } from "../../../redux/features/product/productApi";
import { Rate } from "antd";

export type TDesProduct = {
  _id: string;
  imageUrl: string;
  title: string;
  rating: number;
  price: number;
  category: string;
  inStock: boolean;
  quantity: number;
  description: string;
};

const ShowProductModal = ({ showProduct }: { showProduct: any }) => {
  const { data, isLoading } = useGetProductsQuery(undefined);
  const [findModalData, setModalData] = useState([]);

  // const getProductData = data?.data;

  useEffect(() => {
    if (!isLoading && data?.data) {
      const findProductData = data.data.filter(
        (product: TDesProduct) => product._id === showProduct
      );
      setModalData(findProductData);
    }
  }, [data, showProduct, isLoading]);

  if (isLoading) {
    return <span className="loading"></span>;
  }
  console.log(findModalData);
  // console.log(showProduct, data);

  // if (!findModalData) {
  //   return null; // or some loading/error state
  // }

  // const {
  //   title,
  //   category,
  //   description,
  //   imageUrl,
  //   price,
  //   rating,
  //   quantity,
  //   inStock,
  // } = findModalData as TDesProduct;

  return (
    <dialog id="my_modal_4" className="modal">
      <div className="modal-box w-11/12 max-w-5xl">
        {findModalData?.map((item: TDesProduct) => (
          <div key={item._id} className="flex flex-col md:flex-row gap-16">
            <div className="w-full">
              <figure className="h-full relative bg-slate-100 p-2 py-12  rounded-xl">
                <img
                  src={item.imageUrl}
                  alt={item.category}
                  className="w-full h-[400px]  object-contain"
                />
              </figure>
            </div>
            <div className="w-full ">
              <h2 className="text-2xl font-semibold border-b pb-4">
                {item.title}
              </h2>
              <div className="my-6 space-y-2 border-b pb-6">
                <h3 className="text-[#333]">
                  Category :{" "}
                  <span className="text-green-600">{item.category}</span>
                </h3>
                <h3 className="text-[#333]">
                  Available Product :
                  <span className="text-slate-600"> {item.quantity} items</span>
                </h3>
                <h3 className="text-[#333]">
                  Availability: :{" "}
                  <span className="text-slate-600">
                    {item.inStock ? "In Stock" : "Out Of Stock"}
                  </span>
                </h3>
                <div className=" flex gap-6 items-center">
                  <Rate allowHalf disabled={true} defaultValue={item.rating} />
                  <div className="text-slate-500 cursor-pointer flex items-center gap-2 ">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      strokeWidth={1.5}
                      stroke="currentColor"
                      className="size-5"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="M12 20.25c4.97 0 9-3.694 9-8.25s-4.03-8.25-9-8.25S3 7.444 3 12c0 2.104.859 4.023 2.273 5.48.432.447.74 1.04.586 1.641a4.483 4.483 0 0 1-.923 1.785A5.969 5.969 0 0 0 6 21c1.282 0 2.47-.402 3.445-1.087.81.22 1.668.337 2.555.337Z"
                      />
                    </svg>
                    <span>0 reviews</span>
                  </div>
                  <div className="text-slate-500 flex items-center gap-2 cursor-pointer">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      strokeWidth={1.5}
                      stroke="currentColor"
                      className="size-5"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125"
                      />
                    </svg>

                    <span>Write a review</span>
                  </div>
                </div>
              </div>
              <div className="border-b pb-5">
                <div className="flex items-center gap-x-4">
                  <h2 className="text-2xl font-semibold">${item.price}.00</h2>
                  <span className="text-slate-500 line-through text-sm ">
                    $122
                  </span>
                </div>
                <span className="text-slate-500">Ex Tax: $20.00</span>
              </div>
            </div>
          </div>
        ))}

        <div className="modal-action">
          <form method="dialog">
            {/* if there is a button, it will close the modal */}
            <button className="btn">Close</button>
          </form>
        </div>
      </div>
    </dialog>
  );
};

export default ShowProductModal;
